Q1.

Htmlfile

<!DOCTYPEhtml>
<html>
<head>
<title>Number Check</title>
<scriptsrc=”<?phpechobase_url(‘js/numberCheck.js’);?>”></script></head>
<body>
<h1>NumberCheck</h1>
<p>Enteranumbertocheck:</p>
<inputtype=”number”id=”num”/>
<buttononclick=”checkNumber(document.getElementById(‘num’).value)”>Check</button></body>
</html>

Createisfilechecknumber.js

Function checkNumber(num){
If(num>0){
Alert(“The number is positive.”);
}elseif(num<0){
Alert(“The number is negative.”);
}else{
Alert(“The number is zero.”);
}
}

====================================
Q2.

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# 1. Collect data
data = pd.read_csv('user_data.csv')

# 2. Preprocess data
data.dropna(inplace=True)
X = data['age'].values.reshape(-1, 1)
Y = data['income'].values.reshape(-1, 1)

# 3. Split data
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=0)

# 4. Train the model
regressor = LinearRegression()
regressor.fit(x_train, y_train)

# 5. Predict values
y_pred = regressor.predict(x_test)

# 6. Evaluate model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean squared error:", mse)
print("R-squared:", r2)

# 7. Visualize results
plt.scatter(x_test, y_test, color='gray')
plt.plot(x_test, y_pred, color='red', linewidth=2)
plt.show()
