Q.1

function validateForm() { 
	// Get the username and password input values 
	var username = document.forms["membershipForm"]["username"].value; 
	var password = document.forms["membershipForm"]["password"].value;

	// Validate username 
	if (username == "") { 
		alert("Username must be filled out"); return false; 
	}
	
	// Validate password 
	if (password == "") { 
		alert("Password must be filled out"); return false; 
	}
	
	// Return true if both username and password are valid return true; 
}

===============================================
Q2.


items = ['item1', 'item2', 'item3', 'item4']
transactions = [['item1', 'item2', 'item3'],
                ['item2', 'item3'],
                ['item1', 'item2', 'item4'],
                ['item1', 'item4'],
                ['item2', 'item3', 'item4'],
                ['item1', 'item3', 'item4'],
                ['item1', 'item2'],
                ['item1', 'item3'],
                ['item3', 'item4'],
                ['item2', 'item4']]

from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

# Convert the transactions into a binary matrix
te = TransactionEncoder()
te_ary = te.fit_transform(transactions)

# Convert the binary matrix into a pandas DataFrame
df = pd.DataFrame(te_ary, columns=te.columns_)

# Generate frequent itemsets with a minimum support of 0.3
frequent_itemsets = apriori(df, min_support=0.3, use_colnames=True)

# Generate association rules with a minimum confidence of 0.7
association_rules = association_rules(frequent_itemsets, metric='confidence', min_threshold=0.7)

# Print the frequent itemsets and association rules
print(frequent_itemsets)
print(association_rules)
